package com.atm.Service;

import java.time.LocalDate;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.atm.Entity.Subscription;
import com.atm.Repo.SubscriptionRepository;

@Service
public class SubscriptionServiceImpl implements SubscriptionService {

    @Autowired
    private SubscriptionRepository repository;

    @Override
    public Subscription createSubscription(Subscription subscription) {
        String productKey = KeyUtil.encodeKey(subscription.getCompanyId(), subscription.getCompanyName(), subscription.getProductName());
        subscription.setProductKey(productKey);
        subscription.setPurchasedOn(LocalDate.now());
        return repository.save(subscription);
    }

    @Override
    public Subscription updateSubscription(Long id, Subscription updatedSubscription) {
        Subscription existingSubscription = repository.findById(id)
                .orElseThrow(() -> new RuntimeException("Subscription not found"));
        existingSubscription.setCompanyName(updatedSubscription.getCompanyName());
        existingSubscription.setProductName(updatedSubscription.getProductName());
        existingSubscription.setActivationLimit(updatedSubscription.getActivationLimit());
        existingSubscription.setExpiresOn(updatedSubscription.getExpiresOn());
        return repository.save(existingSubscription);
    }

    @Override
    public void deleteSubscription(Long id) {
        repository.deleteById(id);
    }

    @Override
    public List<Subscription> getAllSubscriptions() {
        return repository.findAll();
    }

    @Override
    public Subscription getSubscriptionByKey(String productKey) {
        return repository.findByProductKey(productKey)
                .orElseThrow(() -> new RuntimeException("Invalid product key"));
    }
}